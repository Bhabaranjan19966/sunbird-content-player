<theme id="theme" startStage="textPluginBasic" ver="0.2">
    <manifest>
        <media id="previous" src="icon_previous.png" type="image" />
        <media id="next" src="icon_next.png" type="image" />
        <media id="icon_reload" src="icon_reload.png" type="image" />
        <media id="icon_home" src="icon_home.png" type="image" />
        <media id="bg" src="felt.png" type="image" />
        <media src="sounds/splash.ogg" id="splash_audio" type="audiosprite">
            <data>
                <audioSprite id="cover_sound" startTime="0" duration="7131.428571428572"></audioSprite>
            </data>
        </media>
    </manifest>
    
    <controller name="testData" type="data" id="testdata"/>

	<stage id="baseStage" preload="true">
        <image asset="next" x="93" y="3" w="5" h="8.3" id="next" visible="false"/>
        <shape id="nextContainer" type="rect" x="90" y="1" w="10" h="15" visible="false" hitArea="true">
            <event type="click">
                <action type="command" command="transitionTo" asset="theme" param="next" effect="scroll" direction="left" ease="linear" duration="500" />
            </event>
        </shape>
        <image asset="previous" x="2" y="3" w="5" h="8.3" id="previous" visible="false"/>
        <shape id="previousContainer" type="rect" x="1" y="1" w="10" h="15" visible="false" hitArea="true">
            <event type="click">
                <action type="command" command="transitionTo" asset="theme" param="previous" effect="scroll" direction="right" ease="linear" duration="500" transitionType="previous"/>
            </event>
        </shape>
        <text param="heading" x="28" y="2" w="62" h="23" weight="bold" fontsize="50" color="#fff"/>
    </stage>

    <stage id="textPluginBasic" x="0" y="0" w="100" h="100" extends="baseStage">
    	<param name="next" value="textPluginWrap" />
    	<!-- <param name="previous" value="textPluginBasic" /> -->

    	<image asset="bg" x="0" y="0" w="100" h="100"/>
        <param name="heading" model="testData.ts_textpg_align"/>

        <text x="5" y="10" h="10" w="25" fontsize="30" color="yellow">Default alignment - should be aligned as top-left, by default</text>
        <shape x="5" y="20" h="10" w="15" type="rect" stroke="white"/>
        <text x="5" y="20" h="10" w="15" fontsize="60" color="white">TopLeft</text>


        <text x="5" y="40" h="10" w="25" fontsize="30" color="yellow">Horiz alignments - should be aligned as displayed</text>
        <shape x="5" y="50" h="10" w="15" type="rect" stroke="white"/>
        <text x="5" y="50" h="10" w="15" fontsize="60" color="white" align="left">Left</text>
        
        <shape x="25" y="50" h="10" w="15" type="rect" stroke="white"/>
        <text x="25" y="50" h="10" w="15" fontsize="60" color="white" align="center">Center</text>
        
        <shape x="45" y="50" h="10" w="15" type="rect" stroke="white"/>
        <text x="45" y="50" h="10" w="15" fontsize="60" color="white" align="right">Right</text>


        <text x="5" y="70" h="10" w="25" fontsize="30" color="yellow">Vert alignments - should be aligned as displayed</text>
        <shape x="5" y="80" h="15" w="15" type="rect" stroke="white"/>
        <text x="5" y="80" h="15" w="15" fontsize="60" color="white" align="center" valign="top">Top</text>
        
        <shape x="25" y="80" h="15" w="15" type="rect" stroke="white"/>
        <text x="25" y="80" h="15" w="15" fontsize="60" color="white" align="center" valign="middle">Middle</text>
        
        <shape x="45" y="80" h="15" w="15" type="rect" stroke="white"/>
        <text x="45" y="80" h="15" w="15" fontsize="60" color="white" align="center" valign="bottom">Bottom</text>

        <text  x="65" y="55" h="10" w="30" fontsize="30" color="yellow">Both alignments - should be aligned as displayed</text>
        <shape x="65" y="65" h="30" w="30" type="rect" stroke="white"/>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="left" valign="top">TopLeft</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="center" valign="top">TopCenter</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="right" valign="top">TopRight</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="left" valign="middle">MiddleLeft</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="center" valign="middle">MiddleCenter</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="right" valign="middle">MiddleRight</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="left" valign="bottom">BottomLeft</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="center" valign="bottom">BottomCenter</text>
        <text  x="65" y="65" h="30" w="30" fontsize="30" color="white" align="right" valign="bottom">BottomRight</text>
    </stage> 

    <stage id="textPluginWrap" x="0" y="0" w="100" h="100" extends="baseStage">
    	<param name="next" value="mcqOptionsGlow" />
    	<param name="previous" value="textPluginBasic" />

    	<image asset="bg" x="0" y="0" w="100" h="100"/>
        <param name="heading" model="testData.ts_textpg_wrap"/>



        <text x="10" y="10" h="10" w="20" fontsize="30" color="yellow">Default alignments - should be aligned to top-left</text>
        <shape x="10" y="20" h="10" w="20" type="rect" stroke="white"/>
        <text x="10" y="20" h="10" w="20" fontsize="40" color="white">This text is aligned to top-left by default.</text>


        <text x="10" y="40" h="10" w="20" fontsize="30" color="yellow">Horiz alignments - should be aligned as displayed</text>
        <shape x="10" y="50" h="10" w="20" type="rect" stroke="white"/>
        <text x="10" y="50" h="10" w="20" fontsize="40" color="white" align="left">This text is left aligned by setting.</text>
        
        <shape x="30" y="50" h="10" w="20" type="rect" stroke="white"/>
        <text x="30" y="50" h="10" w="20" fontsize="40" color="white" align="center">Use align="center" to align text in center</text>
        
        <shape x="50" y="50" h="10" w="20" type="rect" stroke="white"/>
        <text x="50" y="50" h="10" w="20" fontsize="40" color="white" align="right">Use align="right" to align text at right</text>

        <text x="10" y="70" h="10" w="20" fontsize="30" color="yellow">Vert alignments - should be aligned as displayed</text>
        <shape x="10" y="80" h="15" w="20" type="rect" stroke="white"/>
        <text x="10" y="80" h="15" w="20" fontsize="40" color="white" align="center" valign="top">Use valign="top" for vertical top alignment</text>
        
        <shape x="30" y="80" h="15" w="20" type="rect" stroke="white"/>
        <text x="30" y="80" h="15" w="20" fontsize="40" color="white" align="center" valign="middle">Use valign="middle" for vertical middle alignment</text>
        
        <shape x="50" y="80" h="15" w="20" type="rect" stroke="white"/>
        <text x="50" y="80" h="15" w="20" fontsize="40" color="white" align="center" valign="bottom" stroke="red" stroke-width="2">Use valign="bottom" for vertical bottom alignment</text>
    </stage> 

    <stage id="mcqOptionsGlow" x="0" y="0" w="100" h="100" extends="baseStage">
        <param name="next" value="launchExternal" />
        <param name="previous" value="textPluginWrap" />

        <image asset="bg" x="0" y="0" w="100" h="100"/>
        <param name="heading" model="testData.ts_mcq_glow"/>

        <text x="10" y="10" h="10" w="40" fontsize="30" color="yellow">TO-DO</text>


    </stage>

    <stage id="launchExternal" x="0" y="0" w="100" h="100" extends="baseStage">
        <param name="next" value="conditionalRendering" />
        <param name="previous" value="mcqOptionsGlow" />

        <image asset="bg" x="0" y="0" w="100" h="100"/>
        <param name="heading" model="testData.ts_external_launch"/>


        <text x="10" y="10" h="10" w="40" fontsize="30" color="yellow">External URL - should be launched when URL is clicked</text>
        <text x="10" y="15" w="45" h="5" font="Arial" fontsize="48" color="white">
            Go to ekstep.org
        </text>
        <shape type="rect" x="10" y="15" w="35" h="7" hitArea="true">
            <event type="click">
                <action type="command" command="external" href="http://www.ekstep.org/"/>
            </event>
        </shape>    

        <text x="10" y="40" h="10" w="40" fontsize="30" color="yellow">External app - should be launched when link is clicked</text>
        <text x="10" y="45" w="45" h="15" font="Arial" fontsize="48" color="white">
            Launch whatsapp
        </text>
        <shape type="rect" x="10" y="50" w="20" h="65">
            <event type="click">
                <action type="command" command="external" app="com.whatsapp"/>
            </event>
        </shape>

    </stage>
    <stage id="conditionalRendering" x="0" y="0" w="100" h="100" extends="baseStage">
        <param name="next" value="finished" />
        <param name="previous" value="launchExternal" />

        <image asset="bg" x="0" y="0" w="100" h="100"/>
        <param name="heading" model="testData.ts_cond_render_stage"/>

        
        <set param="param1" value="value1" scope="stage"/>
        <set param="param2" ev-value="stage.param1 + '_new'" scope="stage"/>
        <text x="10" y="10" h="10" w="80" fontsize="40" color="yellow">Text plugin: expression evaluates to false - should not show text</text>
        <text x="10" y="15" h="10" w="80" fontsize="30" color="white" ev-if="stage.param2 == 'value_new'">Invalid expression. This expression shouldn't be seen.</text>
        <text x="10" y="20" h="10" w="80" fontsize="40" color="yellow">Text plugin: expression evaluates to true - should show text below.</text>
        <text x="10" y="25" h="10" w="80" fontsize="30" color="white" ev-if="stage.param2 == 'value1_new'">Got True. Showing the text.</text>
        <text x="10" y="30" h="10" w="80" fontsize="40" color="yellow">Image plugin: expression evaluates to false - should not show image</text>
        <image asset="icon_home" x="35" y="30" w="10" h="10" ev-if="stage.param2 == 'value_new'"/>
        <text x="10" y="45" h="10" w="80" fontsize="40" color="yellow">Image plugin: expression evaluates to true - should show image</text>
        <image asset="icon_home" x="35" y="50" w="10" h="10" ev-if="stage.param2 == 'value1_new'"/>
        <text x="10" y="60" h="10" w="80" fontsize="40" color="yellow">Shape plugin: expression evaluates to false - should show shape</text>
        <shape type="rect" x="55" y="65" w="5" h="5" hitArea="true" stroke="white" ev-if="stage.param2 == 'value_new'"></shape>
        <text x="10" y="70" h="10" w="80" fontsize="40" color="yellow">Shape plugin: expression evaluates to true - should show shape</text>
        <shape type="rect" x="55" y="75" w="5" h="5" hitArea="true" stroke="white" ev-if="stage.param2 == 'value1_new'"></shape>
        <text x="10" y="80" h="10" w="80" fontsize="40" color="yellow">Audio plugin: expression evaluates to false - should play audio</text>
        <audio asset="splash_audio" ev-if="stage.param2 == 'value_new'"/>
        <text x="10" y="90" h="10" w="80" fontsize="40" color="yellow">Audio plugin: expression evaluates to true - should play audio</text>
        <audio asset="splash_audio" ev-if="stage.param2 == 'value1_new'"/>



        

    </stage>
    <stage id="finished" x="0" y="0" w="100" h="100">
    	<image asset="bg" x="0" y="0" w="100" h="100"/>
        
        <text x="38" y="15" w="30" h="8" font="Georgia" fontsize="50">
            It works :) See you again!
        </text>
        
        <image asset="icon_reload" x="30" y="35" w="15" h="20" />
        <text x="33" y="57" w="15" h="5" font="Arial" fontsize="48">
            Replay
        </text>
        <shape type="rect" x="30" y="35" w="15" h="30" hitArea="true">
            <event type="click">
                <action type="command" command="restart" asset="theme"/>
            </event>
        </shape>

        <image asset="icon_home" x="55" y="35" w="15" h="20" />
        <text x="58" y="57" w="15" h="5" font="Arial" fontsize="48">
            Home
        </text>
        <shape type="rect" x="55" y="35" w="15" h="30" hitArea="true">
            <event type="click">
                <action type="command" command="windowEvent" asset="theme" href="#/content/list"/>
            </event>
        </shape>

        <text x="48" y="75" w="15" h="5" font="Arial" fontsize="48">
            Ekstep
        </text>
        <shape type="rect" x="47" y="74" w="17" h="7" hitArea="true">
            <event type="click">
                <action type="command" command="external" href="http://www.ekstep.org/"/>
            </event>
        </shape>
        
    </stage>
</theme>