function onRequestFileSystemError(a){console.log("[ERROR] Problem setting up root filesystem for running! Error to follow."),console.log(JSON.stringify(a))}function toGenieDateTime(a){var b=dateFormat(new Date(a),"yyyy-mm-dd'T'HH:MM:ssZ").replace("GMT","");return b.insert(-2,":")}var dateFormat=function(){var a=/d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\1?|[LloSZ]|"[^"]*"|'[^']*'/g,b=/\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\d{4})?)\b/g,c=/[^-+\dA-Z]/g,d=function(a,b){for(a=String(a),b=b||2;a.length<b;)a="0"+a;return a};return function(e,f,g){var h=dateFormat;if(1!=arguments.length||"[object String]"!=Object.prototype.toString.call(e)||/\d/.test(e)||(f=e,e=void 0),e=e?new Date(e):new Date,isNaN(e))throw SyntaxError("invalid date");f=String(h.masks[f]||f||h.masks["default"]),"UTC:"==f.slice(0,4)&&(f=f.slice(4),g=!0);var i=g?"getUTC":"get",j=e[i+"Date"](),k=e[i+"Day"](),l=e[i+"Month"](),m=e[i+"FullYear"](),n=e[i+"Hours"](),o=e[i+"Minutes"](),p=e[i+"Seconds"](),q=e[i+"Milliseconds"](),r=g?0:e.getTimezoneOffset(),s={d:j,dd:d(j),ddd:h.i18n.dayNames[k],dddd:h.i18n.dayNames[k+7],m:l+1,mm:d(l+1),mmm:h.i18n.monthNames[l],mmmm:h.i18n.monthNames[l+12],yy:String(m).slice(2),yyyy:m,h:n%12||12,hh:d(n%12||12),H:n,HH:d(n),M:o,MM:d(o),s:p,ss:d(p),l:d(q,3),L:d(q>99?Math.round(q/10):q),t:12>n?"a":"p",tt:12>n?"am":"pm",T:12>n?"A":"P",TT:12>n?"AM":"PM",Z:g?"UTC":(String(e).match(b)||[""]).pop().replace(c,""),o:(r>0?"-":"+")+d(100*Math.floor(Math.abs(r)/60)+Math.abs(r)%60,4),S:["th","st","nd","rd"][j%10>3?0:(j%100-j%10!=10)*j%10]};return f.replace(a,function(a){return a in s?s[a]:a.slice(1,a.length-1)})}}();dateFormat.masks={"default":"ddd mmm dd yyyy HH:MM:ss",shortDate:"m/d/yy",mediumDate:"mmm d, yyyy",longDate:"mmmm d, yyyy",fullDate:"dddd, mmmm d, yyyy",shortTime:"h:MM TT",mediumTime:"h:MM:ss TT",longTime:"h:MM:ss TT Z",isoDate:"yyyy-mm-dd",isoTime:"HH:MM:ss",isoDateTime:"yyyy-mm-dd'T'HH:MM:ss",isoUtcDateTime:"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'"},dateFormat.i18n={dayNames:["Sun","Mon","Tue","Wed","Thu","Fri","Sat","Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],monthNames:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","January","February","March","April","May","June","July","August","September","October","November","December"]},Date.prototype.format=function(a,b){return dateFormat(this,a,b)},FilewriterService=Class.extend({init:function(){this.initWriter()},initWriter:function(){throw"Subclasses of FilewriterService should implement this function"},createBaseDirectory:function(a,b){throw"Subclasses of FilewriterService should implement this function"},createFile:function(a,b,c){throw"Subclasses of FilewriterService should implement this function"},write:function(a,b,c,d){throw"Subclasses of FilewriterService should implement this function"},length:function(a){throw"Subclasses of FilewriterService should implement this function"},getData:function(a){throw"Subclasses of FilewriterService should implement this function"}}),TelemetryEvent=Class.extend({createdTime:void 0,name:void 0,event:void 0,init:function(){this.createdTime=(new Date).getTime(),this.event={ts:toGenieDateTime(this.createdTime),ver:TelemetryService._eventsVersion,sid:GlobalContext.user.uid,uid:GlobalContext.user.uid,did:GlobalContext.user.uid,edata:{eks:{},ext:{}}},this.event.gdata=TelemetryService._gameData},flush:function(){this.event&&GenieService.sendTelemetry(JSON.stringify(this.event)).then(function(){})["catch"](function(a){TelemetryService.logError(this.name,a)})},ext:function(a){if(_.isObject(a))if(this.event.edata.ext)for(key in a)this.event.edata.ext[key]=a[key];else this.event.edata.ext=a;return this}}),AssessEvent=TelemetryEvent.extend({qid:void 0,startTime:void 0,_isStarted:!1,init:function(a,b,c){this._super(),this.event.eid=this.name="OE_ASSESS",this.qid=a,this.startTime=this.createdTime,this.event.edata.eks={subj:b,qid:a,qlevel:c,qtype:"",mc:[],mmc:[],score:0,maxscore:0,exres:[],exlength:0,length:0,atmpts:0,failedatmpts:0},this._isStarted=!0,TelemetryService._data[TelemetryService._gameData.id][a]=this},start:function(){return this._isStarted=!0,this.startTime=(new Date).getTime(),this},end:function(a,b,c,d){if(!this._isStarted)throw"can't end assess event without starting.";this.event.edata.eks.length+=Math.round(((new Date).getTime()-this.startTime)/1e3),this.event.edata.eks.atmpts+=1,this.event.edata.eks.score=b||0,a?(this.event.edata.eks.pass="Yes",this.event.edata.eks.mmc=[]):(this.event.edata.eks.pass="No",this.event.edata.eks.score=0,this.event.edata.eks.failedatmpts+=1),this.event.edata.eks.res=c||[],this.event.edata.eks.uri=d||"",this._isStarted=!1,this.flush(),delete TelemetryService._data[TelemetryService._gameData.id][qid]},mmc:function(a){return this.event.edata.eks.mmc=a,this},maxscore:function(a){return this.event.edata.eks.maxscore=a,this}}),ConsolewriterService=FilewriterService.extend({_root:void 0,_data:"",_error:"",_others:"",initWriter:function(){return _data=_error=_others="",new Promise(function(a,b){a(!0)})},createBaseDirectory:function(a,b){},createFile:function(a,b,c){},write:function(a,b,c){return new Promise(function(d,e){a.endsWith("output.json")?(_data.length>0&&c&&(_data=_data.substring(0,_data.length-c)),_data+=b,console.log("Data:",_data)):a.endsWith("output.json")?(_error.length>0&&c&&(_error=_error.substring(0,_error.length-c)),_error+=b,console.log("Data:",_error)):(_others.length>0&&c&&(_others=_data.substring(0,_others.length-c)),_others+=b,console.log("Data:",_others)),console.log(a+" write completed..."),d(!0)})},length:function(a){return new Promise(function(a,b){a(_data.length)})},getData:function(a){return new Promise(function(a,b){a(_data)})}}),CordovaFilewriterService=FilewriterService.extend({_root:void 0,initWriter:function(){var a,b;return new Promise(function(c,d){a=c,b=d,document.addEventListener("deviceready",function(){window.requestFileSystem(LocalFileSystem.PERSISTENT,0,function(b){_root=b.root,a(b.root)},function(a){console.log("[ERROR] Problem setting up root filesystem for running! Error to follow."),console.log(JSON.stringify(a)),b(a)})})})},createBaseDirectory:function(a,b){_root.getDirectory(a,{create:!0},function(a){console.log(a.name+" created successfully.")},b)},createFile:function(a,b,c){_root.getFile(a,{create:!1},function(d){d?d.remove(function(){_root.getFile(a,{create:!0},b,c)},c):_root.getFile(a,{create:!0},b,c)},function(){_root.getFile(a,{create:!0},b,c)})},write:function(a,b,c){return new Promise(function(d,e){_root.getFile(a,{create:!1},function(f){f.createWriter(function(f){f.length>0&&c&&f.seek(f.length-c),f.write(b),f.onwriteend=function(b){console.log(a+" write completed..."),d(!0)},f.onerror=function(a){e(a)}},function(a){e(a)})},function(a){e(a)})})},length:function(a){return new Promise(function(b,c){_root.getFile(a,{create:!1},function(a){a.createWriter(function(a){b(a.length)},function(){c("Error while creating writer.")})},function(){c("Error while getting file.")})})},getData:function(a){return new Promise(function(b,c){_root.getFile(a,{},function(a){a.file(function(a){var c=new FileReader;c.onloadend=function(a){console.log("this.result:",this.result),b(this.result)},c.readAsText(a)},function(){c("Error while reading file.")})},function(){c("Error while reading file.")})})}}),EndEvent=TelemetryEvent.extend({init:function(a,b){a&&b&&(TelemetryService._gameData={id:a,ver:b}),this._super(),this.event.eid=this.name="OE_END";var c=_.findWhere(TelemetryService._data[TelemetryService._gameData.id],{name:"OE_START"});if(!c)throw"Can't end game without starting...";this.event.edata.eks.length=Math.round((this.createdTime-c.createdTime)/1e3),this.flush()},flush:function(){this._super(),delete TelemetryService._data[TelemetryService._gameData.id],console.log("Game: "+TelemetryService._gameData.id+" end event created..."),TelemetryService._gameData=TelemetryService._parentGameData}}),InActiveEvent=Class.extend({init:function(){},ext:function(){},start:function(){},end:function(){},flush:function(){},__noSuchMethod__:function(){return console.log("TelemetryService is inActive"),this}}),InteractEvent=TelemetryEvent.extend({init:function(a,b,c){this._super(),this.event.eid=this.name="OE_INTERACT";var d=TelemetryService._config.events[this.name];_.contains(d.eks.type.values,a)||(this.event.edata.ext.type=a,a="OTHER"),this.event.edata.eks={type:a,id:b,extype:c,uri:""}}}),InterruptEvent=TelemetryEvent.extend({init:function(a,b){this._super(),this.event.eid=this.name="OE_INTERRUPT";var c=TelemetryService._config.events[this.name];_.contains(c.eks.type.values,a)||(this.event.edata.ext.type=a,a="OTHER"),this.event.edata.eks={type:a,id:b||""},this.flush()}}),StartEvent=TelemetryEvent.extend({init:function(a,b){a&&b&&(TelemetryService._gameData={id:a,ver:b}),this._super(),this.event.eid=this.name="OE_START",this.flush()},flush:function(){this._super(),TelemetryService._data[TelemetryService._gameData.id]=[],TelemetryService._data[TelemetryService._gameData.id].push(this)}}),TelemetryService={isActive:!1,_eventsVersion:"1.0",_config:void 0,_gameData:void 0,_baseDir:"EkStep Content App",_gameOutputFile:void 0,_gameErrorFile:void 0,_data:{},mouseEventMapping:{click:"TOUCH",dblclick:"CHOOSE",mousedown:"DROP",pressup:"DRAG"},init:function(a){return new Promise(function(b,c){a?(a.id&&a.ver?(TelemetryService._parentGameData=a,TelemetryService._gameData=a):c("Invalid game data."),TelemetryServiceUtil.getConfig().then(function(a){TelemetryService._config=a,TelemetryService._config.isActive&&(TelemetryService.isActive=TelemetryService._config.isActive),b(!0)})["catch"](function(a){console.log("Error in init of TelemetryService:",a),c(a)})):c("Game data is empty.")})},exitWithError:function(a){var b="";a&&(b+=" Error: "+JSON.stringify(a)),TelemetryService.exitApp()},start:function(a,b){return TelemetryService.isActive?new StartEvent(a,b):new InActiveEvent},end:function(a){return TelemetryService.isActive?new EndEvent(a):new InActiveEvent},interact:function(a,b,c){return TelemetryService.isActive?new InteractEvent(a,b,c):new InActiveEvent},assess:function(a,b,c){if(TelemetryService.isActive){var d=TelemetryService._data[TelemetryService._gameData.id][a];return d?d:new AssessEvent(a,b,c)}return new InActiveEvent},levelSet:function(a){if(TelemetryService.isActive);else console.log("TelemetryService is inActive.")},interrupt:function(a,b){return TelemetryService.isActive?new InterruptEvent(a,b):new InActiveEvent},createFiles:function(){TelemetryService.isActive&&(TelemetryService.ws.createBaseDirectory(TelemetryService._baseDir,function(){console.log("file creation failed...")}),TelemetryService.ws.createFile(TelemetryService._gameOutputFile,function(a){console.log(a.name+" created successfully.")},function(){console.log("file creation failed...")}),TelemetryService.ws.createFile(TelemetryService._gameErrorFile,function(a){console.log(a.name+" created successfully.")},function(){console.log("file creation failed...")}))},logError:function(a,b){var c={eventName:a,message:b,time:toGenieDateTime((new Date).getTime())};console.log("TelemetryService Error:",JSON.stringify(c))},exitApp:function(){setTimeout(function(){navigator.app.exitApp()},5e3)}},TelemetryServiceUtil={_config:void 0,getConfig:function(){return new Promise(function(a,b){TelemetryServiceUtil._config?a(TelemetryServiceUtil._config):$.getJSON("json/telemetryConfig.json",{},function(c){c?("string"==typeof c?TelemetryServiceUtil._config=JSON.parse(c):TelemetryServiceUtil._config=c,console.log("Telemetry Config init completed..."),a(TelemetryServiceUtil._config)):b(null)}).error(function(a){console.log("Error:",a),b(a)})})}},String.prototype.insert=function(a,b){var c=0>a?this.length+a:a;return this.substring(0,c)+b+this.substring(c,this.length)};